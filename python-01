1.环境搭建
  1).Anaconda下载地址：https://www.anaconda.com/download
  2).Anaconda Navigtor ：用于管理工具包和环境的图形用户界面
  3).安装后，需要在系统变量里指定好路径
  
2.解释器
  安装目录下的python.exe, 是Python解释器
  cPython:用c语言开发的解释器
  iPython:在cPython上加了点交互功能
  PyPy:JIT技术提高了速度，对代码动态编译
  Jython：运行在java上的解释器，可将Python代码编译成java字节码
  IronPython:运行在微软.Net的解释器，可将Python代码编译成.Net字节码
  
3.集成开发环境
  1).spyder:一个使用Python语言、跨平台的、科学运算集成开发环境（anaconda里可直接下载）
  2).pycharm:在环境配置里直接指定python.exe的路径即可
  3).jupyter:基于web的交互式计算环境，可以编辑易于人们阅读的文档，用于展示数据分析的过程
  
4.python初体验
  1).>>>print("Hello,World!")
        Heloo,World!
  2).>>>name=input('please enter your name:')
     >>>print('hello,',name)
     please enter your name:liwei
     hello, liwei
     
5.python基础讲解
  1.)命名规则: 变量名的长度不受限制，但其中的字符必须是字母、数字、或者下划线（_），而不能使用空格、连字符、标点符号、引号或其他字符。
              变量名的第一个字符不能是数字，而必须是字母或下划线。
              Python区分大小写。
              不能将Python关键字用作变量名。
  2.)变量特性：python的变量类型不固定，
  3.)注释方法:单行注释用#开头
             多行注释前后用三对单引号''' / 双引号"""包裹（快捷键：按下ctrl+/注释）
             
  4).python中的符号：中括号[ ]：用于定义列表或引用列表、数组、字符串及元组中元素位置
                    小括号（）：用于定义元组
                    大括号 { }：用于定义集合
                    冒号： 用于定义分片、步长
  5).帮助函数：dir()用来查询一个类或者对象所有属性
              help()函数帮助我们了解模块、类型、对象、方法、属性的详细信息
  6).import使用:单独import必须分两行
                提倡绝对导入，但如果绝对导入比较冗长可相对导入，python3中不鼓励
                通配符导入from <module> import *应尽可能避免
  7).pep8介绍：PEP8是Python的编码规范，其中心在于提高代码的可读性
     a.代码排版: 保持每行缩进使用4个空格(不能混用tab和空格，默认会全部转换为空格)
                一行的最大长度为79个字符，(文档字符串或注释不超过72个字符)
                换行首选括号，再是反斜杠。换行点在操作符后敲回车
                顶层函数与类之间空两行，类方法之间空一行，函数内部不同逻辑段之间空一行
     b.文档排版: Py2中默认编码ASCII或Latin-1，Py3中默认为UTF-8
                import导入时单独分开导入，from xx import xx,xx 可以多个导入
                导入位于文件的顶部：在模块注释和文档字符后，全局变量和常量前
                导入顺序：标准库 、 相关第三方库 、 本地库/自定义库,之间空一行,并配置相关的__all__说明书
                包导入时：尽量使用绝对路径，移植性和阅读性更高
     c.避免多余空格:各种括号前不加空格
                   逗号、分号或冒号前不加空格
                   函数调用的参数列表的圆括号的开括号前，text(1)
                   索引或切片的方括号的开括号前,list[1]
                   在复制或其他语句的运算符周围，不要为了对齐使用多个空格
                   算数运算符前后加空格：1 * 3 
                   不在一个关键字参数或一个缺省参数值的 = 前后加一个空格：def text(real, imag=0)
                   通常不推荐使用复合语句(一行多语句)
                   if/for/while 块中，执行语句必须另起一行
      d.注释:不好理解的注释，不如没有注释。
             如果是一个短语或句子，首字母大写(除标识符)，以句号结尾，并且有两个空格
             使用英语注释，因为不同编码或其他等原因，中文容易出现乱码
             块注释：在一段代码前增加，以 # 开头跟一个空格。段落以# 的单行分隔
             行内注释：与语句间隔两个空格，起始于 #和一个空格(例：x = x+y  # this is text)
             文档字符串：对于模块，函数，类和方法进行注释说明，位于def 行之后
             版本注记：有Subversion、CVS、RCS等，在块注释后，其他代码之前，前后一个空行
      e.命名风格:大小写字母和下划线组成
                首字母大写缩进：所有字符用大写，HTTPServerError
                单下划线开始：表示内部使用的方法，不建议修改
                单下划线结束：用于避免与Python关键字或方法冲突
                双下划线开始：定义类中的属性，不能直接通过类名进行调取，而是类方法获取，或者是类名._类名__属性名进行获取，(一般不推荐使用)
                双下划线开始结束：永远不要自定义该类型的方法，用于内部的魔法方法
      f.命名规范:特别注意"l"(小写l)、"I"(大写i)、"1"(数字1)、"0"（数字0），"O"(大写o)，不作为单个变量名
                模块名：全小写并简短，可以使用下滑线
                包名：全小写并简短，不建议下滑线
                类名：首字母大写。内部类加上前导下划线
                异常名：沿用类名规则并以"Error"为前缀
                全局变量名：尽量只在模块内有效。实现为__all__或者是前缀一个下划线
                函数名：小写，可用下划线分隔
                方法名和实例变量：下划线分隔的小写字母，私有方法和实例变量前用单下划线
                常量：在模块级别定义，全大写和下划线分隔
                类的属性有三种作用域public、non-public与subclass API，类似Java中的public、private、protected。non-public属性前，前缀单下划线
                公有属性和保留字冲突时，在属性后加一个下划线，比缩写和拼写好
                如果属性不希望被子类继承时，用双下滑先开头，可以进行避免。但需要注意调取时的命名内容，类名._类名__属性名可以调用，或者是子类出现相同的类名和属性名，会有冲突
                类的实例方法第一参数为self，类方法第一参数为cls
       g.编码建议:编码中考虑其他Python实现效率等问题，比如运算符'+'进行字符串拼接时，在CPython效率高，在Jython中非常低，所以使用.join()的方式
                 在于None比较时，使用is优于'==',因为在Python中None是固定内存id，所以直接通过is判断效率更高
                 使用复杂比较实现排序时，应用__eq__,__ne__,.....等效率更高，并且可以通过function.total_ordering()提供生成缺少的比较操作方法
                 使用基于类的异常，每个模块或包都有自己的异常类，此异常类继承自Exception
                 抛出异常使用raise，并且捕获异常时不要单独只有except会捕获SystemExit和KeyboardInterrupt异常，使得难以中断并隐藏其他问题，其后续跟具体的异常类型，以及处理方式
                 Try/except语句，限制try语句来减少必要代码的数量
                 使用'.startswith()'和'.endswith()'而非字符切片去检测前缀或后缀
                 对象类型比较isinstance()优于type，注：在Python2.3中Unicode和str的基类一致
                 判断序列(strings,lists,tuples)
6.python数值基本知识
  a.python中数值类型，int，float，字符串，bool，空值NULL，e记法等
  b.算数运算符:+ - * / //(整除) **(乘方) %(取模) <<(左移) >> &(按位与) |(按位或) ^(按位异或) ~(按位取反) 
  c.逻辑运算符:< > <= >= == != not(布尔非) and(布尔与) or(布尔或) 
  d.成员运算符:
  e.身份运算符:
  f.运算符优先级:
